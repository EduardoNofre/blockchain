Smart contract

ja mineremos vamos criar um contrato basico

1- O ideal é que sua maquina esteja minerando.

2 - vamos criar dois  arquivos LivroVisitas.js e 
 O ideal é colocar o seu contrato dentro da em um diretorio.
arquivo 1 - C:\contrato\LivroVisitas.js
arquivo 2 - C:\contrato\balance.js

3 - faça o uma copia do codigo abaixo.

// inicio
pragma solidity ^0.4.18;

contract LivroVisitas {
	
    struct Visitante {
        address endereco;
        string nome;
    }

	mapping(uint => Visitante) visitantes;
	uint numeroProxVisitante;
	
	function size() constant returns (uint count) {     
        return numeroProxVisitante -1;
    }

    function LivroVisitas() public {
        numeroProxVisitante = 1;
    }


	function registrarVisita(address _participante, string _visitante) public returns (uint256 numeroVisita)  {
    	var visitante = Visitante(_participante, _visitante);
    	visitantes[numeroProxVisitante] = visitante;
    	numeroVisita = numeroProxVisitante;
    	numeroProxVisitante++;
	}

	function ultimoVisitante() view returns (address endereco, string nome) {
	  return (visitantes[numeroProxVisitante-1].endereco, visitantes[numeroProxVisitante-1].nome) ;
	}
}

// fim

4 - Vá para a pagina do remix endereço do site:
https://remix.ethereum.org/#optimize=true&version=soljson-v0.4.24+commit.e67f0147.js


5 - Cole o script do passo 3 dentro do textField.
Para compilar clique no botão do lado direito da pagina chamado "Start to compile"

6 -  Compilada.
Do lado direito da pagina existe o botão Datails.
Apos clicar sera exibida uma janela, nessa janela WEB3DEPLOY copie o conteudo

conteudo gerado apos a compilação
// inicio
var livrovisitasContract = web3.eth.contract([{"constant":true,"inputs":[],"name":"ultimoVisitante","outputs":[{"name":"endereco","type":"address"},{"name":"nome","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"size","outputs":[{"name":"count","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_participante","type":"address"},{"name":"_visitante","type":"string"}],"name":"registrarVisita","outputs":[{"name":"numeroVisita","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]);
var livrovisitas = livrovisitasContract.new(
   {
     from: web3.eth.accounts[0], 
     data: '0x608060405234801561001057600080fd5b5060018055610401806100246000396000f3006080604052600436106100565763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663416782c8811461005b578063949d225d1461011b578063e835f9b314610142575b600080fd5b34801561006757600080fd5b506100706101b6565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156100df5781810151838201526020016100c7565b50505050905090810190601f16801561010c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561012757600080fd5b50610130610284565b60408051918252519081900360200190f35b34801561014e57600080fd5b5060408051602060046024803582810135601f810185900485028601850190965285855261013095833573ffffffffffffffffffffffffffffffffffffffff1695369560449491939091019190819084018382808284375094975061028f9650505050505050565b60018054600019908101600090815260208181526040808320805490860180548351601f6002998316156101000290980190911697909704958601849004840287018401909252848652929460609473ffffffffffffffffffffffffffffffffffffffff909416939192909183918301828280156102755780601f1061024a57610100808354040283529160200191610275565b820191906000526020600020905b81548152906001019060200180831161025857829003601f168201915b50505050509050915091509091565b600154600019015b90565b6000610299610325565b5060408051808201825273ffffffffffffffffffffffffffffffffffffffff85811682526020808301868152600180546000908152808452959095208451815473ffffffffffffffffffffffffffffffffffffffff191694169390931783555180519394859461031093918501929091019061033d565b50506001805480820190915595945050505050565b60408051808201909152600081526060602082015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061037e57805160ff19168380011785556103ab565b828001600101855582156103ab579182015b828111156103ab578251825591602001919060010190610390565b506103b79291506103bb565b5090565b61028c91905b808211156103b757600081556001016103c15600a165627a7a7230582073b09b11fcef02d8d2deaad469dbe9d87a376294f219d00d2063376ba2137c1f0029', 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
// fim

7 - Depois de copiar o conteudo de WEB3DEPLOY.
Vamos o abrir o arquivo criado no passo 2 C:\contrato\LivroVisitas.js, abra o seu arquivo LivroVisitas.js e cole o conteudo do passo.

6 - no passo 2 vamos abrir o arquivo 2

e colocar  esse conteudo.

// inicio
function checkAllBalances() {
	web3.eth.getAccounts(function(err, accounts) {
		accounts.forEach(function(id) {
			web3.eth.getBalance(id, function(err, balance) {
				console.log("" + id + ":\tbalance: " + web3.fromWei(balance, "ether") + " ether");
			});
		});
	});
};
// fim

7 - abra o terminal cmd

execute o comando
\Program Files\Geth>geth.exe attach ipc:\\.\pipe\geth.ipc

> loadScript("C:\\Blockchain\\data-private\\handson002\\LivroVisitas.js")
null [object Object]
true
> null [object Object]
Contract mined! address: 0x88109395a6f5a268ccd630d4ca2d65cb6d5c8c65 transactionHash: 0x8ae5739d088bc38256da09dd62c169c5c96461deb3966d13bef9a3d3b3539c09


> loadScript('C:\\Blockchain\\data-private\\handson002\\ff.js')
true

9 - vamos executar o comando abaixo:

checkAllBalances()

se tudo der certo será retornado o valor abaixo:
0xadc9a5ffefa67f0753ea831a72eebf119b6fdfe2:     balance: 8015 ether
o primeiro valor é a sua carteira o balance e o ether que vc ganhou na sua mineração.

10 - vamos executar o contrato livrovisitas

vamos chamar as funções do livrovisitas.js 

	10.1 - livrovisitas.size()
		se deu certo esse será o seu retorno
		["0x000000000000000000000000000000000000000", ""]
		Isso informa que não houve nenhuma transação

	10.2 - vamos fazer uma transação
		livrovisitas.registrarVisita('0xadc9a5ffefa67f0753ea831a72eebf119b6fdfe2','visitante',{from:eth.accounts[0],gas:90000})
		Na função registrarVisita temos 3 parametros são eles:
		carteira, nome do visitante, gas provivede 
		se tudo deu certo o resultado será
		"0x09e48aa609cb3b268b5f7beee817e9852195c76a31538228eaffaf6eb528f0ed"  <-- esse é o seu hash da transação

	10.3 - livrovisitas.size()
		se tudo deu certo esse será o retorno:
		1 Esse numero representa a quantidade de transação que foram feitas no seu contrato
		


 
https://github.com/astarlabs/desenvolvedor-ethereum-blockchain/blob/master/balance.js
 









